//width, height
@mixin size($width, $height: $width) {
  width: $width;
  height: $height;
}

// posion absolute
@mixin absolute($condition: "left", $position: absolute) {
  position: $position;
  @if $condition == "left" {
    left: 50%;
    transform: translateX(-50%);
  }
  @if $condition == "top" {
    top: 50%;
    transform: translateY(-50%);
  }
  @if $condition == "both" {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
}

@mixin absoluteFull() {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

@mixin maxWidth($breakPoint) {
  @media screen and (max-width: $breakPoint) {
    @content;
  }
}

@mixin minWidth($breakPoint) {
  @media screen and (min-width: $breakPoint) {
    @content;
  }
}

@mixin flexBox(
  $align-item: stretch,
  $justify-content: flex-start,
  $direction: row,
  $flex: flex,
  $wrap: nowrap
) {
  display: $flex;
  align-items: $align-item;
  justify-content: $justify-content;
  flex-direction: $direction;
  flex-wrap: $wrap;
}

@mixin hideScroll() {
  -ms-overflow-style: none;
  scrollbar-width: none;
  &::-webkit-scrollbar {
    display: none;
  }
}

@mixin textClamp($line: "1") {
  display: -webkit-box;
  -webkit-line-clamp: $line;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
  width: 100%;
  max-width: 100%;
  white-space: pre-wrap;
  word-break: break-word;
}

@mixin hoverEffect($itemClass, $contentClass, $isTransform: "true") {
  &#{$itemClass} {
    position: relative;
    z-index: 1;
    transition: all 0.25s linear;
    @if $isTransform == "true" {
      &:after {
        content: "";
        @include absoluteFull();
        background-color: $third-color;
        transition: all 0.25s linear;
        // transform: translate(1rem, 1rem);
        z-index: -1;
      }
    }
    &:hover {
      #{$contentClass} {
        opacity: 1;
        visibility: visible;
      }
      @if $isTransform == "true" {
        transform: translate(-1rem, -1rem);
        &:after {
          transform: translate(1rem, 1rem);
          transition: all 0.25s linear;
        }
      }
    }
  }
  &#{$contentClass} {
    @include absoluteFull();
    @include flexBox(center, center, column);
    opacity: 0;
    visibility: hidden;
    transition: all 0.25s liner;
    z-index: 2;
    background: linear-gradient(
      to bottom,
      rgba($primary-color, 0.8),
      rgba($secondary-color, 0.8)
    );
  }
}

@mixin touchSlide($width: 80%, $gap: 2.5rem, $padding: 1rem) {
  display: grid !important;
  justify-content: flex-start !important;
  grid-auto-columns: $width;
  grid-auto-flow: column;
  grid-template-columns: unset;
  grid-column-gap: $gap;
  overflow-x: scroll;
  padding: $padding;
  scroll-snap-stop: always;
  scroll-snap-type: x mandatory;
  @include hideScroll();
  & > * {
    width: auto;
    scroll-snap-align: center;
  }
}
